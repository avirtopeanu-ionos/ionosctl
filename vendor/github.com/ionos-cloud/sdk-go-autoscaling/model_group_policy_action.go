/*
 * VM Auto Scaling Service (part of CloudAPI)
 *
 * Provides Endpoints to manage the Autoscaling feature by IONOS cloud
 *
 * API version: 1-SDK.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// GroupPolicyAction struct for GroupPolicyAction
type GroupPolicyAction struct {
	// When `amountType == ABSOLUTE`, this is the number of VMs added or removed in one step. When `amountType == PERCENTAGE`, this is a percentage value, which will be applied to the Autoscaling Group's current `targetReplicaCount` in order to derive the number of VMs that will be added or removed in one step. There will always be at least one VM added or removed.
	Amount *float32 `json:"amount"`
	AmountType *ActionAmount `json:"amountType"`
	// Minimum time to pass after this Scaling Action has started, until the next Scaling Action will be started. Additionally, if a Scaling Action is currently in progress, no second Scaling Action will be started for the same Autoscaling Group. Instead, the Metric will be re-evaluated after the current Scaling Action completed (either successful or with failures).
	CooldownPeriod *string `json:"cooldownPeriod"`
}



// GetAmount returns the Amount field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *GroupPolicyAction) GetAmount() *float32 {
	if o == nil {
		return nil
	}


	return o.Amount

}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicyAction) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}


	return o.Amount, true
}

// SetAmount sets field value
func (o *GroupPolicyAction) SetAmount(v float32) {


	o.Amount = &v

}

// HasAmount returns a boolean if a field has been set.
func (o *GroupPolicyAction) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}



// GetAmountType returns the AmountType field value
// If the value is explicit nil, the zero value for ActionAmount will be returned
func (o *GroupPolicyAction) GetAmountType() *ActionAmount {
	if o == nil {
		return nil
	}


	return o.AmountType

}

// GetAmountTypeOk returns a tuple with the AmountType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicyAction) GetAmountTypeOk() (*ActionAmount, bool) {
	if o == nil {
		return nil, false
	}


	return o.AmountType, true
}

// SetAmountType sets field value
func (o *GroupPolicyAction) SetAmountType(v ActionAmount) {


	o.AmountType = &v

}

// HasAmountType returns a boolean if a field has been set.
func (o *GroupPolicyAction) HasAmountType() bool {
	if o != nil && o.AmountType != nil {
		return true
	}

	return false
}



// GetCooldownPeriod returns the CooldownPeriod field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GroupPolicyAction) GetCooldownPeriod() *string {
	if o == nil {
		return nil
	}


	return o.CooldownPeriod

}

// GetCooldownPeriodOk returns a tuple with the CooldownPeriod field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicyAction) GetCooldownPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.CooldownPeriod, true
}

// SetCooldownPeriod sets field value
func (o *GroupPolicyAction) SetCooldownPeriod(v string) {


	o.CooldownPeriod = &v

}

// HasCooldownPeriod returns a boolean if a field has been set.
func (o *GroupPolicyAction) HasCooldownPeriod() bool {
	if o != nil && o.CooldownPeriod != nil {
		return true
	}

	return false
}


func (o GroupPolicyAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	

	if o.AmountType != nil {
		toSerialize["amountType"] = o.AmountType
	}
	

	if o.CooldownPeriod != nil {
		toSerialize["cooldownPeriod"] = o.CooldownPeriod
	}
	
	return json.Marshal(toSerialize)
}

type NullableGroupPolicyAction struct {
	value *GroupPolicyAction
	isSet bool
}

func (v NullableGroupPolicyAction) Get() *GroupPolicyAction {
	return v.value
}

func (v *NullableGroupPolicyAction) Set(val *GroupPolicyAction) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupPolicyAction) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupPolicyAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupPolicyAction(val *GroupPolicyAction) *NullableGroupPolicyAction {
	return &NullableGroupPolicyAction{value: val, isSet: true}
}

func (v NullableGroupPolicyAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupPolicyAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


