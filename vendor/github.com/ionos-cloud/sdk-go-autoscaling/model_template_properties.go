/*
 * VM Auto Scaling Service (part of CloudAPI)
 *
 * Provides Endpoints to manage the Autoscaling feature by IONOS cloud
 *
 * API version: 1-SDK.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// TemplateProperties struct for TemplateProperties
type TemplateProperties struct {
	AvailabilityZone *AvailabilityZone `json:"availabilityZone"`
	// The total number of cores for the VMs.
	Cores *int32 `json:"cores"`
	CpuFamily *CpuFamily `json:"cpuFamily,omitempty"`
	// Location of the Template.
	Location *string `json:"location"`
	// Name used for VMs.
	Name *string `json:"name,omitempty"`
	// List of NICs associated with this Template.
	Nics *[]TemplateNic `json:"nics,omitempty"`
	// The amount of memory for the VMs in MB, e.g. 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB.
	Ram *int32 `json:"ram"`
	// List of volumes associated with this Template. Only a single volume is currently supported.
	Volumes *[]TemplateVolume `json:"volumes,omitempty"`
}



// GetAvailabilityZone returns the AvailabilityZone field value
// If the value is explicit nil, the zero value for AvailabilityZone will be returned
func (o *TemplateProperties) GetAvailabilityZone() *AvailabilityZone {
	if o == nil {
		return nil
	}


	return o.AvailabilityZone

}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProperties) GetAvailabilityZoneOk() (*AvailabilityZone, bool) {
	if o == nil {
		return nil, false
	}


	return o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *TemplateProperties) SetAvailabilityZone(v AvailabilityZone) {


	o.AvailabilityZone = &v

}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *TemplateProperties) HasAvailabilityZone() bool {
	if o != nil && o.AvailabilityZone != nil {
		return true
	}

	return false
}



// GetCores returns the Cores field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *TemplateProperties) GetCores() *int32 {
	if o == nil {
		return nil
	}


	return o.Cores

}

// GetCoresOk returns a tuple with the Cores field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProperties) GetCoresOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}


	return o.Cores, true
}

// SetCores sets field value
func (o *TemplateProperties) SetCores(v int32) {


	o.Cores = &v

}

// HasCores returns a boolean if a field has been set.
func (o *TemplateProperties) HasCores() bool {
	if o != nil && o.Cores != nil {
		return true
	}

	return false
}



// GetCpuFamily returns the CpuFamily field value
// If the value is explicit nil, the zero value for CpuFamily will be returned
func (o *TemplateProperties) GetCpuFamily() *CpuFamily {
	if o == nil {
		return nil
	}


	return o.CpuFamily

}

// GetCpuFamilyOk returns a tuple with the CpuFamily field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProperties) GetCpuFamilyOk() (*CpuFamily, bool) {
	if o == nil {
		return nil, false
	}


	return o.CpuFamily, true
}

// SetCpuFamily sets field value
func (o *TemplateProperties) SetCpuFamily(v CpuFamily) {


	o.CpuFamily = &v

}

// HasCpuFamily returns a boolean if a field has been set.
func (o *TemplateProperties) HasCpuFamily() bool {
	if o != nil && o.CpuFamily != nil {
		return true
	}

	return false
}



// GetLocation returns the Location field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TemplateProperties) GetLocation() *string {
	if o == nil {
		return nil
	}


	return o.Location

}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProperties) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.Location, true
}

// SetLocation sets field value
func (o *TemplateProperties) SetLocation(v string) {


	o.Location = &v

}

// HasLocation returns a boolean if a field has been set.
func (o *TemplateProperties) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}



// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TemplateProperties) GetName() *string {
	if o == nil {
		return nil
	}


	return o.Name

}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProperties) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.Name, true
}

// SetName sets field value
func (o *TemplateProperties) SetName(v string) {


	o.Name = &v

}

// HasName returns a boolean if a field has been set.
func (o *TemplateProperties) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}



// GetNics returns the Nics field value
// If the value is explicit nil, the zero value for []TemplateNic will be returned
func (o *TemplateProperties) GetNics() *[]TemplateNic {
	if o == nil {
		return nil
	}


	return o.Nics

}

// GetNicsOk returns a tuple with the Nics field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProperties) GetNicsOk() (*[]TemplateNic, bool) {
	if o == nil {
		return nil, false
	}


	return o.Nics, true
}

// SetNics sets field value
func (o *TemplateProperties) SetNics(v []TemplateNic) {


	o.Nics = &v

}

// HasNics returns a boolean if a field has been set.
func (o *TemplateProperties) HasNics() bool {
	if o != nil && o.Nics != nil {
		return true
	}

	return false
}



// GetRam returns the Ram field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *TemplateProperties) GetRam() *int32 {
	if o == nil {
		return nil
	}


	return o.Ram

}

// GetRamOk returns a tuple with the Ram field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProperties) GetRamOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}


	return o.Ram, true
}

// SetRam sets field value
func (o *TemplateProperties) SetRam(v int32) {


	o.Ram = &v

}

// HasRam returns a boolean if a field has been set.
func (o *TemplateProperties) HasRam() bool {
	if o != nil && o.Ram != nil {
		return true
	}

	return false
}



// GetVolumes returns the Volumes field value
// If the value is explicit nil, the zero value for []TemplateVolume will be returned
func (o *TemplateProperties) GetVolumes() *[]TemplateVolume {
	if o == nil {
		return nil
	}


	return o.Volumes

}

// GetVolumesOk returns a tuple with the Volumes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateProperties) GetVolumesOk() (*[]TemplateVolume, bool) {
	if o == nil {
		return nil, false
	}


	return o.Volumes, true
}

// SetVolumes sets field value
func (o *TemplateProperties) SetVolumes(v []TemplateVolume) {


	o.Volumes = &v

}

// HasVolumes returns a boolean if a field has been set.
func (o *TemplateProperties) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}


func (o TemplateProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.AvailabilityZone != nil {
		toSerialize["availabilityZone"] = o.AvailabilityZone
	}
	

	if o.Cores != nil {
		toSerialize["cores"] = o.Cores
	}
	

	if o.CpuFamily != nil {
		toSerialize["cpuFamily"] = o.CpuFamily
	}
	

	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	

	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	

	if o.Nics != nil {
		toSerialize["nics"] = o.Nics
	}
	

	if o.Ram != nil {
		toSerialize["ram"] = o.Ram
	}
	

	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	
	return json.Marshal(toSerialize)
}

type NullableTemplateProperties struct {
	value *TemplateProperties
	isSet bool
}

func (v NullableTemplateProperties) Get() *TemplateProperties {
	return v.value
}

func (v *NullableTemplateProperties) Set(val *TemplateProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateProperties(val *TemplateProperties) *NullableTemplateProperties {
	return &NullableTemplateProperties{value: val, isSet: true}
}

func (v NullableTemplateProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


