/*
 * VM Auto Scaling Service (part of CloudAPI)
 *
 * Provides Endpoints to manage the Autoscaling feature by IONOS cloud
 *
 * API version: 1-SDK.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
	"fmt"
)

// Metric The Metric that should trigger Scaling Actions. The values of the Metric are checked in fixed intervals.
type Metric string

// List of Metric
const (
	CPU_UTILIZATION_AVERAGE Metric = "INSTANCE_CPU_UTILIZATION_AVERAGE"
	NETWORK_IN_BYTES Metric = "INSTANCE_NETWORK_IN_BYTES"
	NETWORK_IN_PACKETS Metric = "INSTANCE_NETWORK_IN_PACKETS"
	NETWORK_OUT_BYTES Metric = "INSTANCE_NETWORK_OUT_BYTES"
	NETWORK_OUT_PACKETS Metric = "INSTANCE_NETWORK_OUT_PACKETS"
)

func (v *Metric) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Metric(value)
	for _, existing := range []Metric{ "INSTANCE_CPU_UTILIZATION_AVERAGE", "INSTANCE_NETWORK_IN_BYTES", "INSTANCE_NETWORK_IN_PACKETS", "INSTANCE_NETWORK_OUT_BYTES", "INSTANCE_NETWORK_OUT_PACKETS",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Metric", value)
}

// Ptr returns reference to Metric value
func (v Metric) Ptr() *Metric {
	return &v
}

type NullableMetric struct {
	value *Metric
	isSet bool
}

func (v NullableMetric) Get() *Metric {
	return v.value
}

func (v *NullableMetric) Set(val *Metric) {
	v.value = val
	v.isSet = true
}

func (v NullableMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetric(val *Metric) *NullableMetric {
	return &NullableMetric{value: val, isSet: true}
}

func (v NullableMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

