/*
 * VM Auto Scaling Service (part of CloudAPI)
 *
 * Provides Endpoints to manage the Autoscaling feature by IONOS cloud
 *
 * API version: 1-SDK.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// GroupPolicy struct for GroupPolicy
type GroupPolicy struct {
	Metric *Metric `json:"metric"`
	// Defines the range of time from which samples will be aggregated. Default is 120s.
	Range *string `json:"range"`
	ScaleInAction *GroupPolicyAction `json:"scaleInAction"`
	// A lower threshold on the value of `metric`. Will be used with `less than` (<) operator. Exceeding this will start a Scale-In Action as specified by the `scaleInAction` property. The value must have a higher minimum delta to the `scaleOutThreshold` depending on the `metric` to avoid competitive actions at the same time.
	ScaleInThreshold *float32 `json:"scaleInThreshold"`
	ScaleOutAction *GroupPolicyAction `json:"scaleOutAction"`
	// An upper threshold on the value of `metric`.  Will be used with `greater than` (>) operator. Exceeding this will start a Scale-Out Action as specified by the `scaleOutAction` property. The value must have a lower minimum delta to the `scaleInThreshold` depending on the `metric` to avoid competitive actions at the same time.
	ScaleOutThreshold *float32 `json:"scaleOutThreshold"`
	Unit *QueryUnit `json:"unit"`
}



// GetMetric returns the Metric field value
// If the value is explicit nil, the zero value for Metric will be returned
func (o *GroupPolicy) GetMetric() *Metric {
	if o == nil {
		return nil
	}


	return o.Metric

}

// GetMetricOk returns a tuple with the Metric field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicy) GetMetricOk() (*Metric, bool) {
	if o == nil {
		return nil, false
	}


	return o.Metric, true
}

// SetMetric sets field value
func (o *GroupPolicy) SetMetric(v Metric) {


	o.Metric = &v

}

// HasMetric returns a boolean if a field has been set.
func (o *GroupPolicy) HasMetric() bool {
	if o != nil && o.Metric != nil {
		return true
	}

	return false
}



// GetRange returns the Range field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GroupPolicy) GetRange() *string {
	if o == nil {
		return nil
	}


	return o.Range

}

// GetRangeOk returns a tuple with the Range field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicy) GetRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}


	return o.Range, true
}

// SetRange sets field value
func (o *GroupPolicy) SetRange(v string) {


	o.Range = &v

}

// HasRange returns a boolean if a field has been set.
func (o *GroupPolicy) HasRange() bool {
	if o != nil && o.Range != nil {
		return true
	}

	return false
}



// GetScaleInAction returns the ScaleInAction field value
// If the value is explicit nil, the zero value for GroupPolicyAction will be returned
func (o *GroupPolicy) GetScaleInAction() *GroupPolicyAction {
	if o == nil {
		return nil
	}


	return o.ScaleInAction

}

// GetScaleInActionOk returns a tuple with the ScaleInAction field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicy) GetScaleInActionOk() (*GroupPolicyAction, bool) {
	if o == nil {
		return nil, false
	}


	return o.ScaleInAction, true
}

// SetScaleInAction sets field value
func (o *GroupPolicy) SetScaleInAction(v GroupPolicyAction) {


	o.ScaleInAction = &v

}

// HasScaleInAction returns a boolean if a field has been set.
func (o *GroupPolicy) HasScaleInAction() bool {
	if o != nil && o.ScaleInAction != nil {
		return true
	}

	return false
}



// GetScaleInThreshold returns the ScaleInThreshold field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *GroupPolicy) GetScaleInThreshold() *float32 {
	if o == nil {
		return nil
	}


	return o.ScaleInThreshold

}

// GetScaleInThresholdOk returns a tuple with the ScaleInThreshold field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicy) GetScaleInThresholdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}


	return o.ScaleInThreshold, true
}

// SetScaleInThreshold sets field value
func (o *GroupPolicy) SetScaleInThreshold(v float32) {


	o.ScaleInThreshold = &v

}

// HasScaleInThreshold returns a boolean if a field has been set.
func (o *GroupPolicy) HasScaleInThreshold() bool {
	if o != nil && o.ScaleInThreshold != nil {
		return true
	}

	return false
}



// GetScaleOutAction returns the ScaleOutAction field value
// If the value is explicit nil, the zero value for GroupPolicyAction will be returned
func (o *GroupPolicy) GetScaleOutAction() *GroupPolicyAction {
	if o == nil {
		return nil
	}


	return o.ScaleOutAction

}

// GetScaleOutActionOk returns a tuple with the ScaleOutAction field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicy) GetScaleOutActionOk() (*GroupPolicyAction, bool) {
	if o == nil {
		return nil, false
	}


	return o.ScaleOutAction, true
}

// SetScaleOutAction sets field value
func (o *GroupPolicy) SetScaleOutAction(v GroupPolicyAction) {


	o.ScaleOutAction = &v

}

// HasScaleOutAction returns a boolean if a field has been set.
func (o *GroupPolicy) HasScaleOutAction() bool {
	if o != nil && o.ScaleOutAction != nil {
		return true
	}

	return false
}



// GetScaleOutThreshold returns the ScaleOutThreshold field value
// If the value is explicit nil, the zero value for float32 will be returned
func (o *GroupPolicy) GetScaleOutThreshold() *float32 {
	if o == nil {
		return nil
	}


	return o.ScaleOutThreshold

}

// GetScaleOutThresholdOk returns a tuple with the ScaleOutThreshold field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicy) GetScaleOutThresholdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}


	return o.ScaleOutThreshold, true
}

// SetScaleOutThreshold sets field value
func (o *GroupPolicy) SetScaleOutThreshold(v float32) {


	o.ScaleOutThreshold = &v

}

// HasScaleOutThreshold returns a boolean if a field has been set.
func (o *GroupPolicy) HasScaleOutThreshold() bool {
	if o != nil && o.ScaleOutThreshold != nil {
		return true
	}

	return false
}



// GetUnit returns the Unit field value
// If the value is explicit nil, the zero value for QueryUnit will be returned
func (o *GroupPolicy) GetUnit() *QueryUnit {
	if o == nil {
		return nil
	}


	return o.Unit

}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupPolicy) GetUnitOk() (*QueryUnit, bool) {
	if o == nil {
		return nil, false
	}


	return o.Unit, true
}

// SetUnit sets field value
func (o *GroupPolicy) SetUnit(v QueryUnit) {


	o.Unit = &v

}

// HasUnit returns a boolean if a field has been set.
func (o *GroupPolicy) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}


func (o GroupPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}

	if o.Metric != nil {
		toSerialize["metric"] = o.Metric
	}
	

	if o.Range != nil {
		toSerialize["range"] = o.Range
	}
	

	if o.ScaleInAction != nil {
		toSerialize["scaleInAction"] = o.ScaleInAction
	}
	

	if o.ScaleInThreshold != nil {
		toSerialize["scaleInThreshold"] = o.ScaleInThreshold
	}
	

	if o.ScaleOutAction != nil {
		toSerialize["scaleOutAction"] = o.ScaleOutAction
	}
	

	if o.ScaleOutThreshold != nil {
		toSerialize["scaleOutThreshold"] = o.ScaleOutThreshold
	}
	

	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	
	return json.Marshal(toSerialize)
}

type NullableGroupPolicy struct {
	value *GroupPolicy
	isSet bool
}

func (v NullableGroupPolicy) Get() *GroupPolicy {
	return v.value
}

func (v *NullableGroupPolicy) Set(val *GroupPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupPolicy(val *GroupPolicy) *NullableGroupPolicy {
	return &NullableGroupPolicy{value: val, isSet: true}
}

func (v NullableGroupPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


