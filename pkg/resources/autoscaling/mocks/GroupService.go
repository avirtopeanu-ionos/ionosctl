// Code generated by MockGen. DO NOT EDIT.
// Source: group.go

// Package mock_autoscaling is a generated GoMock package.
package mock_autoscaling

import (
	autoscaling2 "github.com/ionos-cloud/ionosctl/pkg/resources/autoscaling"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGroupsService is a mock of GroupsService interface.
type MockGroupsService struct {
	ctrl     *gomock.Controller
	recorder *MockGroupsServiceMockRecorder
}

// MockGroupsServiceMockRecorder is the mock recorder for MockGroupsService.
type MockGroupsServiceMockRecorder struct {
	mock *MockGroupsService
}

// NewMockGroupsService creates a new mock instance.
func NewMockGroupsService(ctrl *gomock.Controller) *MockGroupsService {
	mock := &MockGroupsService{ctrl: ctrl}
	mock.recorder = &MockGroupsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupsService) EXPECT() *MockGroupsServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockGroupsService) Create(input autoscaling2.Group) (*autoscaling2.Group, *autoscaling2.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", input)
	ret0, _ := ret[0].(*autoscaling2.Group)
	ret1, _ := ret[1].(*autoscaling2.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Create indicates an expected call of Create.
func (mr *MockGroupsServiceMockRecorder) Create(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockGroupsService)(nil).Create), input)
}

// Delete mocks base method.
func (m *MockGroupsService) Delete(GroupId string) (*autoscaling2.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", GroupId)
	ret0, _ := ret[0].(*autoscaling2.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete.
func (mr *MockGroupsServiceMockRecorder) Delete(GroupId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockGroupsService)(nil).Delete), GroupId)
}

// Get mocks base method.
func (m *MockGroupsService) Get(groupId string) (*autoscaling2.Group, *autoscaling2.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", groupId)
	ret0, _ := ret[0].(*autoscaling2.Group)
	ret1, _ := ret[1].(*autoscaling2.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get.
func (mr *MockGroupsServiceMockRecorder) Get(groupId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGroupsService)(nil).Get), groupId)
}

// GetAction mocks base method.
func (m *MockGroupsService) GetAction(groupId, actionId string) (*autoscaling2.Action, *autoscaling2.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAction", groupId, actionId)
	ret0, _ := ret[0].(*autoscaling2.Action)
	ret1, _ := ret[1].(*autoscaling2.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetAction indicates an expected call of GetAction.
func (mr *MockGroupsServiceMockRecorder) GetAction(groupId, actionId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAction", reflect.TypeOf((*MockGroupsService)(nil).GetAction), groupId, actionId)
}

// GetServer mocks base method.
func (m *MockGroupsService) GetServer(groupId, serverId string) (*autoscaling2.Server, *autoscaling2.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServer", groupId, serverId)
	ret0, _ := ret[0].(*autoscaling2.Server)
	ret1, _ := ret[1].(*autoscaling2.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetServer indicates an expected call of GetServer.
func (mr *MockGroupsServiceMockRecorder) GetServer(groupId, serverId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServer", reflect.TypeOf((*MockGroupsService)(nil).GetServer), groupId, serverId)
}

// List mocks base method.
func (m *MockGroupsService) List() (autoscaling2.Groups, *autoscaling2.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].(autoscaling2.Groups)
	ret1, _ := ret[1].(*autoscaling2.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// List indicates an expected call of List.
func (mr *MockGroupsServiceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockGroupsService)(nil).List))
}

// ListActions mocks base method.
func (m *MockGroupsService) ListActions(groupId string) (autoscaling2.Actions, *autoscaling2.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListActions", groupId)
	ret0, _ := ret[0].(autoscaling2.Actions)
	ret1, _ := ret[1].(*autoscaling2.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListActions indicates an expected call of ListActions.
func (mr *MockGroupsServiceMockRecorder) ListActions(groupId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListActions", reflect.TypeOf((*MockGroupsService)(nil).ListActions), groupId)
}

// ListServers mocks base method.
func (m *MockGroupsService) ListServers(groupId string) (autoscaling2.Servers, *autoscaling2.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServers", groupId)
	ret0, _ := ret[0].(autoscaling2.Servers)
	ret1, _ := ret[1].(*autoscaling2.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListServers indicates an expected call of ListServers.
func (mr *MockGroupsServiceMockRecorder) ListServers(groupId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServers", reflect.TypeOf((*MockGroupsService)(nil).ListServers), groupId)
}

// Update mocks base method.
func (m *MockGroupsService) Update(groupId string, input autoscaling2.Group) (*autoscaling2.Group, *autoscaling2.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", groupId, input)
	ret0, _ := ret[0].(*autoscaling2.Group)
	ret1, _ := ret[1].(*autoscaling2.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Update indicates an expected call of Update.
func (mr *MockGroupsServiceMockRecorder) Update(groupId, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockGroupsService)(nil).Update), groupId, input)
}
